services:
  spark-master:
    image: bitnami/spark:3.3
    container_name: spark-master
    hostname: spark-master
    networks:
      - my-global-network
    environment:
      SPARK_MODE: master
      SPARK_MASTER_PORT: 7077
      SPARK_MASTER_WEBUI_PORT: 8085  # Изменён с 8080 на 8085
    ports:
      - "8085:8085"  # Web UI
      - "7077:7077"  # Master port (если свободен)
    volumes:
      - ./spark-apps:/opt/spark-apps

  spark-worker:
    image: bitnami/spark:3.3
    container_name: spark-worker
    hostname: spark-worker
    networks:
      - my-global-network
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: "spark://spark-master:7077"
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2g

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    hostname: namenode
    ports:
      - "9870:9870"
      - "8020:8020"
    environment:
      - CLUSTER_NAME=hadoop-cluster
    volumes:
      - namenode_data:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    hostname: datanode
    depends_on:
      - namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - CORE_CONF_hadoop_proxyuser_hue_hosts=*
      - CORE_CONF_hadoop_proxyuser_hue_groups=*
    volumes:
      - datanode_data:/hadoop/dfs/data
    ports:
      - "9864:9864"
      - "9866:9866"

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    hostname: resourcemanager
    depends_on:
      - namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    ports:
      - "8088:8088"

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    hostname: nodemanager
    depends_on:
      - resourcemanager
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - YARN_CONF_yarn_nodemanager_resource_memory_mb=2048
      - YARN_CONF_yarn_nodemanager_resource_cpu_vcores=2
    ports:
      - "8042:8042"

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    depends_on:
      - namenode
      - resourcemanager
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    ports:
      - "8188:8188"

  hive-metastore-db:
    image: postgres:13
    container_name: hive-metastore-db
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
      POSTGRES_DB: metastore
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hive"]
      interval: 10s
      timeout: 5s
      retries: 10

  hive-metastore:
    image: apache/hive:3.1.3
    container_name: hive-metastore
    depends_on:
      hive-metastore-db:
        condition: service_healthy
      namenode:
        condition: service_started
    healthcheck:
      test: ["CMD", "netstat", "-anp", "|", "grep", "9083"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 30s
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      HIVE_METASTORE_HADOOP_OPTS: "-Dfs.defaultFS=hdfs://namenode:8020"
    command: [
      "--service", "metastore",
      "--hiveconf", "hive.metastore.uris=thrift://hive-metastore:9083",
      "--hiveconf", "javax.jdo.option.ConnectionURL=jdbc:postgresql://hive-metastore-db:5432/metastore",
      "--hiveconf", "javax.jdo.option.ConnectionDriverName=org.postgresql.Driver",
      "--hiveconf", "javax.jdo.option.ConnectionUserName=hive",
      "--hiveconf", "javax.jdo.option.ConnectionPassword=hive",
      "--hiveconf", "hive.metastore.schema.verification=false"
    ]
    ports:
      - "9083:9083"
      
  hive-server:
    image: apache/hive:3.1.3
    container_name: hive-server
    hostname: hive-server
    environment:
      - SERVICE_NAME=hiveserver2
      - WAIT_FOR_SERVICE=hive-metastore:9083
      - WAIT_FOR_SERVICE_TIMEOUT=300
      - HIVE_SERVER2_HADOOP_OPTS=-Dfs.defaultFS=hdfs://namenode:8020
    command: [
      "--service", "hiveserver2",
      "--hiveconf", "hive.metastore.uris=thrift://hive-metastore:9083",
      "--hiveconf", "hive.server2.thrift.port=10000",
      "--hiveconf", "hive.server2.authentication=NOSASL"
    ]
    depends_on:
      hive-metastore:
        condition: service_healthy
      resourcemanager:
        condition: service_started
    ports:
      - "10000:10000"
      - "10002:10002"

volumes:
  namenode_data:
  datanode_data:
  postgres_data:

networks:
  my-global-network:
    external: true